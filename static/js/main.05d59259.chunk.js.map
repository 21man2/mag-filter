{"version":3,"sources":["logo.svg","App.js","Item.js","serviceWorker.js","index.js"],"names":["module","exports","people","Component","first","episode","App","props","state","term","searchHandler","bind","event","this","setState","target","value","className","type","onChange","filter","x","toLowerCase","includes","searchingFor","map","person","key","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gLAAAA,EAAOC,QAAU,IAA0B,kC,mHCKrCC,G,MCHaC,Y,MDGJ,CACb,CAAEC,MAAO,YAAaC,QAAS,iBAC/B,CAAED,MAAO,UAAUC,QAAS,iCAC5B,CAAED,MAAO,QAASC,QAAS,cAC3B,CAAED,MAAO,eAAgBC,QAAS,SAClC,CAAED,MAAO,QAASC,QAAS,iBAC3B,CAAED,MAAO,QAASC,QAAS,6DAC3B,CAAED,MAAO,OAAQC,QAAS,6EAC1B,CAAED,MAAO,YAAaC,QAAS,kCAC/B,CAAED,MAAO,iBAAkBC,QAAS,2BACpC,CAAED,MAAO,WAAYC,QAAS,UAC9B,CAAED,MAAO,6BAA8BC,QAAS,+DAChD,CAAED,MAAO,cAAeC,QAAS,iRACjC,CAAED,MAAO,eAAgBC,QAAS,QAClC,CAAED,MAAO,iBAAkBC,QAAS,KACpC,CAAED,MAAO,YAAaC,QAAS,kBAC/B,CAAED,MAAO,gBAAiBC,QAAS,SACnC,CAAED,MAAO,UAAWC,QAAS,cAC7B,CAAED,MAAO,UAAWC,QAAS,KAC7B,CAAED,MAAO,gBAAiBC,QAAS,yBACnC,CAAED,MAAO,SAAUC,QAAS,kEAC5B,CAAED,MAAO,QAASC,QAAS,aAC3B,CAAED,MAAO,iBAAkBC,QAAS,KACpC,CAAED,MAAO,UAAWC,QAAS,qCAE7B,CAAED,MAAO,UAAWC,QAAS,+GAC7B,CAAED,MAAO,oBAAqBC,QAAS,4GACvC,CAAED,MAAO,UAAWC,QAAS,sCAC7B,CAAED,MAAO,SAAUC,QAAS,mCAC5B,CAAED,MAAO,aAAcC,QAAS,kEAChC,CAAED,MAAO,QAASC,QAAS,kB,IAkEdC,E,kDAhDb,WAAaC,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXN,OAAQA,EACRO,KAAM,IAER,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBANJ,E,0DASLC,GACZC,KAAKC,SAAS,CAACL,KAAKG,EAAMG,OAAOC,U,+BAG1B,IAAD,EAIkBH,KAAKL,MAArBC,EAJF,EAIEA,KAAMP,EAJR,EAIQA,OAEZ,OAEA,yBAAKe,UAAY,OACf,6BAEA,qEACA,kIACA,8BACE,2BAAOC,KAAK,OACAC,SAAYN,KAAKH,cACjBM,MAASP,KAKrBP,EAAOkB,OAhDjB,SAAsBX,GACpB,OAAO,SAASY,GACd,OAAOA,EAAEjB,MAAMkB,cAAcC,SAASd,EAAKa,iBAAmBb,GA8C1Ce,CAAaf,IAAOgB,KAAI,SAAAC,GAAM,OACxC,yBAAKC,IAAOD,EAAOE,IACjB,4BAAKF,EAAOtB,OACZ,4BAAKsB,EAAOrB,kB,GAtCVF,aExCE0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.05d59259.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport './App.css';\nimport Item from './Item';\nimport logo from'./logo.svg';\n\nconst people = [\n  { first: \"abduction\", episode: \"1, 47, 48, 97\"}, \n  { first: \"alcohol\",episode: \"1, 5, 6, 10, 49, 60, 127, 128\"},\n  { first: \"bones\", episode: \"4, 35, 131\"},\n  { first: \"car accident\", episode: \"5, 13\"},\n  { first: \"dolls\", episode: \"5, 24, 83, 87\"},\n  { first: \"drugs\", episode: \"2, 6, 49, 56, 66, 75, 83, 89, 90, 105, 125, 140, 146, 147\"},\n  { first: \"gore\", episode: \"6, 8, 10, 14, 24, 29, 30, 32, 34, 39, 40, 42, 69, 70, 76, 81, 86, 87, 119\"},\n  { first: \"imposters\", episode: \"3, 76, 77, 78, 79, 84, 96, 165\"},\n  { first: \"sleep disorder\", episode: \"2, 11, 74, 100.3, 130, \"},\n  { first: \"stalking\", episode: \"3, 142\"},\n  { first: \"paranoia/paranoia inducing\", episode: \"3, 6, 8, 16, 27, 38, 57, 60, 63, 70, 77, 78, 86, 122, 138, \"},\n  { first: \"body horror\", episode: \"3, 4, 5, 6, 11, 14, 17, 22, 26. 32, 34, 39, 40, 44, 49, 53, 56, 64, 65, 69, 70, 71, 83, 86, 87, 89, 90, 95, 96, 100.2, 100.3, 101, 102, 104, 106, 109, 110, 111, 112, 114, 116, 117, 118, 125, 126, 127, 130, 131, 133, 136, 138, 139, 149, 153, 157, 162, 163, 164, 165, 166\"},\n  { first: \"surveillance\", episode: \"3, 5\"},\n  { first: \"identity theft\", episode: \"3\"},\n  { first: \"lightning\", episode: \"4, 46, 91, 141\"},\n  { first: \"electrocution\", episode: \"4, 91\"},\n  { first: \"heights\", episode: \"4, 44, 124\"},\n  { first: \"vertigo\", episode: \"4\"},\n  { first: \"human remains\", episode: \"4, 128, 129, 130, 150\"},\n  { first: \"injury\", episode: \"3, 4, 5, 7, 8, 12, 29, 42, 75, 87, 89, 113, 119, 123, 152, 154\"},\n  { first: \"teeth\", episode: \"5, 34, 74\"},\n  { first: \"sexual content\", episode: \"6\"},\n  { first: \"smoking\", episode: \"1, 28, 80, 91, 106, 111, 119, 136\"},\n  \n  { first: \"insects\", episode: \"6, 8, 16, 22, 26, 32, 35, 36, 41, 43, 45, 46, 47, 55, 56, 59, 67, 68, 69, 80, 84, 102, 110, 114, 160.1, 164\"},\n  { first: \"physical violence\", episode: \"6, 10, 24, 26, 28, 30, 36, 39, 40, 42, 44, 47, 69, 70, 72, 73, 76, 80, 81, 82, 83, 91, 95, 104, 148, 157\"},\n  { first: \"uncanny\", episode: \"1, 28, 34, 39, 48, 54, 58, 61, 126\"},\n  { first: \"undead\", episode: \"2, 68, 94, 105, 111, 113, 121, \"},\n  { first: \"unsanitary\", episode: \"5, 18, 45, 54, 55, 68, 84, 86, 87, 93, 102, 103, 153, 163, 164\"},\n  { first: \"vomit\", episode: \"5, 6, 18, 69\"},\n \n]   \n\nfunction searchingFor(term){\n  return function(x){\n    return x.first.toLowerCase().includes(term.toLowerCase()) || !term;\n  }\n}\n\nfunction isEpisode(term){\n  return function(x){\n    return x.episode.toLowerCaser().includes(term.toLowercase())\n  }\n  \n}\n\nclass App extends Component{\n  constructor (props){\n    super(props);\n    this.state = {\n      people: people , \n      term: '',\n    }\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  searchHandler(event){\n    this.setState({term:event.target.value})\n  }\n  \n  render(){\n\n    \n\n      const{term, people} = this.state;\n      \n      return(\n        \n      <div className = \"App\">\n        <h1>   \n        </h1>\n        <h1>The Magnus Archives: Content Warnings</h1>\n        <h3>Simply type in your trigger and check to see if the episode you're about to listen to contains it.</h3>\n        <form>\n          <input type=\"text\"\n                      onChange = {this.searchHandler}\n                      value = {term}\n          />\n\n        </form>\n        {\n          people.filter(searchingFor(term)).map(person=>\n              <div key = {person.id}>\n                <h2>{person.first}</h2>\n                <h5>{person.episode}</h5> \n              </div>\n            \n          )\n        }\n\n      </div>\n      );\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react'\r\n\r\nclass Item extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p>{this.props.name}</p>\r\n                \r\n                <p>{this.props.color}</p>\r\n                \r\n                <p>{this.props.price}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Item;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}